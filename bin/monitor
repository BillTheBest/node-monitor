#!/bin/bash

GIT_PROJECT=git://github.com/isidorey/node-monitor.git

case "$1" in
     'start')
		echo "Starting node-monitor"
		
		NODE_MONITOR=`ps -ef | grep -v grep | grep client.js | awk '{print $2'}`
		kill -9 $NODE_MONITOR
		
		cd ../run
		
		# Credentials go here
		#export AWS_ACCESS_KEY_ID=;
		#export AWS_SECRET_ACCESS_KEY=;
		#export TWILIO_SID=;
		#export TWILIO_TOKEN=;
		#export CLOUDSANDRA_TOKEN=;
		#export CLOUDSANDRA_ACCOUNT=;
		
	
			
		# debug sets whether we post data or not
		# console sets whether or not we spit to console as well as log
		#node client.js > /dev/null 2>&1 &
		node client-v0.5.js ec2=false debug=false console=true cloudwatch=false
		
		;;
	'start-server')
		echo "Starting node-monitor server"
		
		NODE_MONITOR=`ps -ef | grep -v grep | grep server.js | awk '{print $2'}`
		kill -9 $NODE_MONITOR
		
		cd ../run
		
		# Credentials go here
		#export AWS_ACCESS_KEY_ID=;
		#export AWS_SECRET_ACCESS_KEY=;
		#export TWILIO_SID=;
		#export TWILIO_TOKEN=;
		#export CLOUDSANDRA_TOKEN=;
		#export CLOUDSANDRA_ACCOUNT=;
		

			
		# debug sets whether we post data or not
		# console sets whether or not we spit to console as well as log
		#node server.js > /dev/null 2>&1 &
		node server-v0.5.js ec2=false debug=false console=true cloudwatch=false

		;;
	'stop')
		echo "Stopping node-monitor"
		
		NODE_MONITOR=`ps -ef | grep -v grep | grep client.js | awk '{print $2'}`
		kill -9 $NODE_MONITOR
		for PID in `ps -ef | grep -v grep | grep "tail -F" | awk '{print $2}'`; do
        	echo "Killing: " + $PID
        	kill -9	$PID
		done
		
		;;
	'update')
		echo "Updating node-monitor"
		
		cp -r /monitoring/node-monitor/config /monitoring/
		rm -r /monitoring/node-monitor
		cd  /monitoring
		git clone $GIT_PROJECT
		cp -r /monitoring/config /monitoring/node-monitor
		chown ubuntu:ubuntu /monitoring * -Rf
		
		;;
	'install-debian')
		yes | apt-get install git-core scons curl build-essential openssl libssl-dev
		cd /monitoring
		git clone https://github.com/joyent/node.git && cd /monitoring/node
		git checkout v0.4.8
		./configure
		make
		make install
		cd /monitoring
		curl http://npmjs.org/install.sh | sudo sh
		npm install iconv forever fermata ec2
		git clone $GIT_PROJECT
		
		;;
	'install-centos')
		yes | yum install gcc gcc-c++ autoconf automake openssl-devel nginx unzip gcc-c++ screen git-core monit
		cd /monitoring
		git clone https://github.com/joyent/node.git && cd /monitoring/node
		git checkout v0.4.8
		./configure
		make
		make install
		cd /monitoring
		sed -i "s/Defaults    secure_path = \/sbin:\/bin:\/usr\/sbin:\/usr\/bin/Defaults    secure_path = \/sbin:\/bin:\/usr\/sbin:\/usr\/bin:\/usr\/local\/bin/g" /etc/sudoers
		curl http://npmjs.org/install.sh | sudo sh
		npm install iconv forever fermata ec2
		git clone $GIT_PROJECT
		
		;;
	'')
		echo "Usage: $0 [start|stop|update|install-debian|install-centos]"
		;;
	'?')
		echo "Usage: $0 [start|stop|update|install-debian|install-centos]"
		;;
esac
